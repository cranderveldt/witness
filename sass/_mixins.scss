@mixin round($radius: $global-radius) {
  -webkit-border-radius: rem($radius);
  border-radius: rem($radius);
  background-clip: padding-box;
}
@mixin circle {
  @include round(50%);
}

@mixin border($color: $border-color, $width: 1, $style: solid) {
  border: rem($width) $style $color;
}

@mixin gradient($top, $bottom, $topPercent: 0%, $bottomPercent: 100%) {
  background-color: $bottom;
  background-position: 0 0;
  background-repeat: repeat-x;
  background: -webkit-gradient(linear, left top, left bottom, color-stop($topPercent, $top), color-stop($bottomPercent, $bottom));
  background: -webkit-linear-gradient(top, $top $topPercent, $bottom $bottomPercent);
  background:    -moz-linear-gradient(top, $top $topPercent, $bottom $bottomPercent);
  background:      -o-linear-gradient(top, $top $topPercent, $bottom $bottomPercent);
  background:     -ms-linear-gradient(top, $top $topPercent, $bottom $bottomPercent);
  background:   linear-gradient(to bottom, $top $topPercent, $bottom $bottomPercent);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$top', endColorstr='$bottom',GradientType=0 );
}

@mixin box-shadow($args...) {
  -webkit-box-shadow: $args;
  box-shadow: $args;
}

$viewport-width: false !default;
@mixin above-width($width: $tablet) {
  @if $viewport-width {
    @if $viewport-width >= $width {
      @content;
    }
  }
  @else {
    @media screen and (min-width: rem($width)) {
      @content;
    }
  }
}
@mixin below-width($width: $tablet) {
  @if $viewport-width {
    @if $viewport-width <= $width {
      @content;
    }
  }
  @else {
    @media screen and (max-width: rem($width)) {
      @content;
    }
  }
}

@mixin inline-block($alignment: none) {
  display: inline-block;
  @if $alignment and $alignment != none {
      vertical-align: $alignment; 
  }
  *vertical-align: auto;
  zoom: 1;
  *display: inline
}

// Find ratio with (height / width * 100)%
@mixin intrinsic-ratio($selector: '.scalable', $ratio: 56.25%) {
  position: relative;
  padding-bottom: $ratio;
  height: 0px;
  #{$selector} {
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
  }
}

@mixin font-size($sizeValue: $default-font-size, $line-h: $default-line-height ){
  font-size: ($sizeValue * 1) + px;
  font-size: rem($sizeValue);
  line-height: $line-h;
}
@mixin header-size($desktop-size, $tablet-size, $mobile-size, $default-size) {
  @if $default-size {
    @include font-size($default-size);
  }
  @if $mobile-size {
    @include above-width($mobile) {
      @include font-size($mobile-size);
    }
  }
  @if $tablet-size {
    @include above-width($tablet) {
      @include font-size($tablet-size);
    }
  }
  @if $desktop-size {
    @include above-width($desktop) {
      @include font-size($desktop-size);
    }
  }
}

@mixin quick-flex($justify: space-between, $align: center, $wrap: nowrap) {
  display: -ms-flex;
  display: -webkit-flex;
  display: flex;
  
  -ms-flex-wrap: $wrap;
  -webkit-flex-wrap: $wrap;
  flex-wrap: $wrap;

  -ms-justify-content: $justify;
  -webkit-justify-content: $justify;
  justify-content: $justify;

  -ms-align-items: $align;
  -webkit-align-items: $align;
  align-items: $align;
}
@mixin v-flex() {
  -ms-flex-direction: column;
  -webkit-flex-direction: column;
  flex-direction: column;
}
@mixin flex-wrap($wrap: wrap) {
  -ms-flex-wrap: $wrap;
  -webkit-flex-wrap: $wrap;
  flex-wrap: $wrap;
}
@mixin flex-justify($justify: flex-start) {
  -ms-justify-content: $justify;
  -webkit-justify-content: $justify;
  justify-content: $justify;
}
@mixin flex-align($align: flex-start) {
  -ms-align-items: $align;
  -webkit-align-items: $align;
  align-items: $align;
}

// Extensible Flex

@mixin flex-row() {
  -ms-flex-wrap: nowrap;
  -webkit-flex-wrap: nowrap;
  flex-wrap: nowrap;

  -ms-justify-content: space-between;
  -webkit-justify-content: space-between;
  justify-content: space-between;

  -ms-align-items: center;
  -webkit-align-items: center;
  align-items: center;
}
@mixin flex-row-at($width: 0) {
  @if $width == 0 {
    display: -ms-flex;
    display: -webkit-flex;
    display: flex;
    & > .flex-col-1 {
      width: 8.33333333333%;
    }
    & > .flex-col-2 {
      width: 16.6666666667%;
    }
    & > .flex-col-3 {
      width: 25%;
    }
    & > .flex-col-4 {
      width: 33.3333333333%;
    }
    & > .flex-col-5 {
      width: 41.6666666667%;
    }
    & > .flex-col-6 {
      width: 50%;
    }
    & > .flex-col-7 {
      width: 58.3333333333%;
    }
    & > .flex-col-8 {
      width: 66.6666666667%;
    }
    & > .flex-col-9 {
      width: 75%;
    }
    & > .flex-col-10 {
      width: 83.3333333333%;
    }
    & > .flex-col-11 {
      width: 91.6666666667%;
    }
    & > .flex-col-12 {
      width: 100%;
    }
  } @else {
    @include above-width($width) {
      display: -ms-flex;
      display: -webkit-flex;
      display: flex;
      & > .flex-col-1 {
        width: 8.33333333333%;
      }
      & > .flex-col-2 {
        width: 16.6666666667%;
      }
      & > .flex-col-3 {
        width: 25%;
      }
      & > .flex-col-4 {
        width: 33.3333333333%;
      }
      & > .flex-col-5 {
        width: 41.6666666667%;
      }
      & > .flex-col-6 {
        width: 50%;
      }
      & > .flex-col-7 {
        width: 58.3333333333%;
      }
      & > .flex-col-8 {
        width: 66.6666666667%;
      }
      & > .flex-col-9 {
        width: 75%;
      }
      & > .flex-col-10 {
        width: 83.3333333333%;
      }
      & > .flex-col-11 {
        width: 91.6666666667%;
      }
      & > .flex-col-12 {
        width: 100%;
      }
    }
  }
}
@mixin flex-column ($size, $width) {
  @if $width == 0 {
    @if $size == auto {
      width: auto;
    }
    @if $size == 1 {
      width: 8.33333333333%;
    }
    @if $size == 2 {
      width: 16.6666666667%;
    }
    @if $size == 3 {
      width: 25%;
    }
    @if $size == 4 {
      width: 33.3333333333%;
    }
    @if $size == 5 {
      width: 41.6666666667%;
    }
    @if $size == 6 {
      width: 50%;
    }
    @if $size == 7 {
      width: 58.3333333333%;
    }
    @if $size == 8 {
      width: 66.6666666667%;
    }
    @if $size == 9 {
      width: 75%;
    }
    @if $size == 10 {
      width: 83.3333333333%;
    }
    @if $size == 11 {
      width: 91.6666666667%;
    }
    @if $size == 12 {
      width: 100%;
    }
  } @else {
    @include above-width($width) {
      @if $size == auto {
        width: auto;
      }
      @if $size == 1 {
        width: 8.33333333333%;
      }
      @if $size == 2 {
        width: 16.6666666667%;
      }
      @if $size == 3 {
        width: 25%;
      }
      @if $size == 4 {
        width: 33.3333333333%;
      }
      @if $size == 5 {
        width: 41.6666666667%;
      }
      @if $size == 6 {
        width: 50%;
      }
      @if $size == 7 {
        width: 58.3333333333%;
      }
      @if $size == 8 {
        width: 66.6666666667%;
      }
      @if $size == 9 {
        width: 75%;
      }
      @if $size == 10 {
        width: 83.3333333333%;
      }
      @if $size == 11 {
        width: 91.6666666667%;
      }
      @if $size == 12 {
        width: 100%;
      }
    }
  }
}
@mixin flex-column-percent ($percent, $width) {
  @if $width == 0 {
    width: $percent;
  } @else {
    @include above-width($width) {
      width: $percent;
    }
  }
}
@mixin flex-gutters ($width: 15, $selector: 'flex-col') {
  margin-left: rem(-$width);
  margin-right: rem(-$width);
  & > [class*="#{$selector}"] {
    padding-left: rem($width);
    padding-right: rem($width);
  }
}
@mixin flex-order ($order: 1) {
  -ms-order: $order;
  -webkit-order: $order;
  order: $order;
}
@mixin flex-static {
  -ms-flex-grow: 0;
  -ms-flex-shrink: 0;
  -webkit-flex-grow: 0;
  -webkit-flex-shrink: 0;
  flex-grow: 0;
  flex-shrink: 0;
}
@mixin flex-dynamic {
  width: 100%;
  -ms-flex-grow: 1;
  -ms-flex-shrink: 1;
  -webkit-flex-grow: 1;
  -webkit-flex-shrink: 1;
  flex-grow: 1;
  flex-shrink: 1;
}

